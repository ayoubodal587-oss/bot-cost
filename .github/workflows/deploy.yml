name: Deploy AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: AWS_ACCESS_KEY_ID  # your environment name

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies and package Lambda
        working-directory: lambda/cost_report
        run: |
          pip install -r requirements.txt -t .
          zip -r ../../lambda_deploy.zip .

      - name: Debug AWS environment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Testing AWS connection in region $AWS_REGION"
          aws sts get-caller-identity
          aws lambda list-functions --region "$AWS_REGION"

      - name: Deploy Lambda function
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Deploying to region: $AWS_REGION"
          aws lambda update-function-code \
            --function-name cost_report_function \
            --zip-file fileb://lambda_deploy.zip \
            --region "$AWS_REGION"

      - name: Notify Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="✅ Deployment succeeded"
          else
            STATUS="❌ Deployment failed"
          fi
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$STATUS for *cost_report_function* in region $AWS_REGION\"}" \
            "$SLACK_WEBHOOK_URL"
